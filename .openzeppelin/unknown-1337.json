{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x1f852DeCC876d01Ee7Fa816235A71D98B4Df73c9",
    "txHash": "0x2f7e3c70f1220fe031a092d11aabf466013ebd9d689adb43ca8663d4b47eecdf"
  },
  "proxies": [
    {
      "address": "0xaBbA55735317573E4904670Ed814275BeaDA15BB",
      "txHash": "0x22847be06a12dd886722305fb7c6f5bea1b0a428cfa999299b0723a76b0ac1a0",
      "kind": "transparent"
    },
    {
      "address": "0xFAe75896b9598C8b822A4301F77f4eBE8B4aC27D",
      "txHash": "0xaaa8b64678610daa3304a5e97aaacca14d4f2c314d544c534c49c698de4671b8",
      "kind": "transparent"
    },
    {
      "address": "0x8F81D75E81b78DA36492E2aB9E2a3f0F537d2457",
      "txHash": "0x4f22cf187ae84607ad69f50b6f031bc7080614313a546515df32b88dbf2f090e",
      "kind": "transparent"
    },
    {
      "address": "0x28d8e51566cAf575Ca90C6dC11Bfe671FfDF0859",
      "txHash": "0x797bfbabf5b604a9b3a9a5729256ef50a36f8db0adb38c789a09029221114618",
      "kind": "transparent"
    },
    {
      "address": "0xD6F7eE40bF2b423D137D87c3B2068bc2B32851ca",
      "txHash": "0x68877f62b76e9703fad98e0add8cc13643892066a632ce97722d4ec6d4d5383e",
      "kind": "transparent"
    },
    {
      "address": "0x5cBd4b7d56754751e81f9b8ed3d20A1Da29EBdc8",
      "txHash": "0xbbf3f03bfc5d12999e5a11f86ff4ea2e25c3122fa8ffba0764e8949ccd44a173",
      "kind": "transparent"
    },
    {
      "address": "0xD5Ab5465198e0f6F3f1C7A0CDCaEA78fEe752243",
      "txHash": "0x8739e54510289d591096fae22d26c099c32a0ca585b1b18678a6a62be3611bff",
      "kind": "transparent"
    },
    {
      "address": "0x2281aC84E2608BA16912472Cc0f5ee3eBa8E075D",
      "txHash": "0x342ce3f052792960a1b5eec01a62d8227b49ca5538594c5942992985b4b72823",
      "kind": "transparent"
    },
    {
      "address": "0x06b007885Cbc16b44F6da8e8CC12272E6Bbd2f19",
      "txHash": "0x2227725a120dd5c9eb6b6f263828a8a0d234375f157d0a5187336fbf642856ad",
      "kind": "transparent"
    },
    {
      "address": "0xdB28391703A209ea46FCa88b6c351A39e0650389",
      "txHash": "0x5a9ea48b79a118d5c2f29a0366805ae9311ca812c0ea1ea9fcfb9dfa632fbb9e",
      "kind": "transparent"
    },
    {
      "address": "0x64D16AE9efC60b940536467193648F27331Dc1C1",
      "txHash": "0xc5ec0f442a75d5db6eb4c64a3027a9a4e1ad8cf7572c32c5bef49371da887b91",
      "kind": "transparent"
    },
    {
      "address": "0x338D9B585b3D1A129CB8F007E8670B30F8E05C83",
      "txHash": "0x950303e3b152fda8c43dfb76caf7447c91f66c1d3167939e5bd85bf3dca42a5d",
      "kind": "transparent"
    },
    {
      "address": "0x0ac74bd0d45c9cE2B81A47A10ae4346541a49A4C",
      "txHash": "0xe5b7c90400ce8ca0bfd4c6344e391795ba9540f7680e8f6fb1d7fafdc5432377",
      "kind": "transparent"
    },
    {
      "address": "0x94d5b9763D4E6b5823132Cd85f228d8334dCf092",
      "txHash": "0xa80d7fbbce14dd2e611c48cd7f381d25c4499f7ec872d453418a7ea5fcec3286",
      "kind": "transparent"
    },
    {
      "address": "0x04FD9e37471Bb244af8Caf46be4C095B0Cc22915",
      "txHash": "0x9d8379fae5c748dad1dde4fb0f3ff1e1ef001be13e823f50d065ce879013c145",
      "kind": "transparent"
    },
    {
      "address": "0x3DcdF2f999930C128F8830122f39d28B45b2101D",
      "txHash": "0x0f09d1776b9b17dcaf842fb3404d2ba9d4eee12126d887f347ea8b3b0210faee",
      "kind": "transparent"
    },
    {
      "address": "0x254db7e801A82f5360E2E57d639F3277B66ee712",
      "txHash": "0x0f36f442fc6bdf1e6bbd831174f62c6242ce00d006e9285a4ebde0817b2e6003",
      "kind": "transparent"
    },
    {
      "address": "0xe19435C4857B63a69123a6ce0bcc311B8cDdb3b1",
      "txHash": "0xb579785c2a242af78d4a242548267a226d3aaf2247d25e67a65e31d93614bcdf",
      "kind": "transparent"
    },
    {
      "address": "0x483C8220FB4d35f4BadC988667306cbcDF702194",
      "txHash": "0x7d5fa007440b6db7d296a56af4fc0c8717ec6829560dd166bf782254268256f4",
      "kind": "transparent"
    },
    {
      "address": "0xe7a0008B3421A6e804A3dE0F99e5e1273c3572E9",
      "txHash": "0x46c0fec28992195dc23f727fa6d8bfa20ea651296e20c0d4452633ea348d6028",
      "kind": "transparent"
    },
    {
      "address": "0xad8aEb0f4e29412D48BB8f439ABEefb0793A2B78",
      "txHash": "0x9d8e1ae011a209f1d9a49a4654eefd898f3f684153a5fc79623865106257bbef",
      "kind": "transparent"
    },
    {
      "address": "0x5f75C6A9fdE81277c25262c00F0E2AC1204bda3D",
      "txHash": "0x516bc7dbeea0be0655d2e2de28e213d805ee22f631cd27ae2b827bd673e0df05",
      "kind": "transparent"
    },
    {
      "address": "0x3a736Ad27D70c0202d011aDA4A04bD2e5AEc30CD",
      "txHash": "0x89d98fbe629bc3964ee142cf0ca6a759daafdac2b382037d908c4b32c7415c6e",
      "kind": "transparent"
    },
    {
      "address": "0x713a7C672C2eEd38D2160a760b83A98cab9B1209",
      "txHash": "0xb10aab81905a3be8b5a79a62a7f230baf86c4f098aa76c561d1d97d81f1badd5",
      "kind": "transparent"
    },
    {
      "address": "0xc82b1ae81aa7013C00744B91Ad0755454063671d",
      "txHash": "0xcf21b47e1e5ebb589a92582a02604a2e8cde2baee4d120ad65e86511b1c2b171",
      "kind": "transparent"
    },
    {
      "address": "0x44278a777EFFCb9d62493f973623B85D750aFa01",
      "txHash": "0x89026379ad903f80aa0975fb5fcb88a7fd34949704aff9533abeca4d82485d9b",
      "kind": "transparent"
    },
    {
      "address": "0x0Be2e116DA1f7EeA406CD470A671Dd48cEc2e2a3",
      "txHash": "0xef62a3711a5642071949fd596bb5d7869fbbe24ee3daec33d269500b50441015",
      "kind": "transparent"
    },
    {
      "address": "0x3d39F39f0DC901258a16eDB949Ff28559F59DA48",
      "txHash": "0x225c3411fac07229d0612fc198403c2cd0f00c0535bd5d4af3b4a7d2effdd2f5",
      "kind": "transparent"
    },
    {
      "address": "0x1bbFE93fA347D1211568A81bC0f3EaA7F2A1e156",
      "txHash": "0x6e580f1583bf1ca79b752d1a0e76eb65e72829ae331a37c348c723876b92ee4e",
      "kind": "transparent"
    },
    {
      "address": "0x3AEcEB6ab90a13ED51b735167A734F8f1A92C97A",
      "txHash": "0x97318fd2eac37a532b40055916a54d1e97a4d092dbf1429541938e596f0a48c8",
      "kind": "transparent"
    },
    {
      "address": "0x79992525A9FE2C8BD6b4Df966473Bb65d8D1AfA7",
      "txHash": "0x04ce698664c3035c7568d256069cb390565a8ed010046f0060fb92219c44220f",
      "kind": "transparent"
    },
    {
      "address": "0xB4A1A9039e7851d64d44553df81eABfd789756a8",
      "txHash": "0x5de41edd848b1318776ec2dc7e73110239646fc913972c6f28888b5537ed39da",
      "kind": "transparent"
    },
    {
      "address": "0x5e4C6707131594091316f3f27864B8db66197d74",
      "txHash": "0x02cbdf554f03f468ec325f032e06015f375ad3014b9f57d9170c8b889b6fe735",
      "kind": "transparent"
    },
    {
      "address": "0x3B290FbD262A767E50E287B326152398Bc2cD6A9",
      "txHash": "0x44b3d9084831a59f130a4f9ba5c021d86fca69de44b50e3d7a38a4fd23fe4868",
      "kind": "transparent"
    },
    {
      "address": "0x542B8624821CF073A8FDF8b1C715B65bEbC0c4D7",
      "txHash": "0x91139f49420589c085c10f7287abbba181a19b00b489d31862825d0b75cf3cd7",
      "kind": "transparent"
    },
    {
      "address": "0x03B82A5f54fAC3db9e9186fBd1Ec2Bd08b77055A",
      "txHash": "0x1f6423a34c6d4d7d8530dbb58b284b771c4d82e979c569990437a1557042500e",
      "kind": "transparent"
    },
    {
      "address": "0x2f003b549ca98E4bc7b45591c607AE046341dd98",
      "txHash": "0x796e849ed10bbd99bced95974f571d1164a3e7f1fd3d97586a664d4d96709077",
      "kind": "transparent"
    },
    {
      "address": "0xc74B171bDBB01eb8fA7f23290E4211C025b1BE39",
      "txHash": "0xb47bc66bdd4508d7c0614894f31db2ac30dfa1c8d26543bacab89146e8e10915",
      "kind": "transparent"
    },
    {
      "address": "0x138228c9aA6CFB958E9EE75b002F3F3806eA47D5",
      "txHash": "0x7ed7cf57031389451cbab748ab5af1b1848642377a8a44493271cc1bf192d713",
      "kind": "transparent"
    },
    {
      "address": "0x9395d036882DB8B9e1B44e1892A36F92846bC503",
      "txHash": "0xd935e1a665e6541beddcfa74bcace557ba26db234b9da2456ebcba0dec9fb201",
      "kind": "transparent"
    },
    {
      "address": "0x3D90A0e93100b7D94c8cf0F98aC62f8D7496AB3F",
      "txHash": "0x890dfae0c5196119612f284358ec9990f1160a129664c0dcb730052da4595eff",
      "kind": "transparent"
    },
    {
      "address": "0x2EA41016a6C4828c42C32B712e4b41A5049BFda5",
      "txHash": "0x07848035ddc152ed4aa5557ddd77087ec7f2c33898f9010abbb43fc22ade31b0",
      "kind": "transparent"
    },
    {
      "address": "0xb52E83762d2649BFd1Af128cd8722E00fdA749A3",
      "txHash": "0xadfdd671e4af5f3bdefc54bd39e19c7c3ce356d721df303f6ff628b498e02e72",
      "kind": "transparent"
    },
    {
      "address": "0xeD7351A8e01b631F46DAFa65CEb41AbfcCD2Fa47",
      "txHash": "0x519810437e6b33208bf1b9e008b8eaf0316581aa26df5d5017667c1b648042d3",
      "kind": "transparent"
    },
    {
      "address": "0xF3e9C70839542458894dFa01c981E41f325b73cD",
      "txHash": "0x7fa43d243596aae2fc6f1efaa451199e81843d5d7adc36a04081b5464182030b",
      "kind": "transparent"
    },
    {
      "address": "0xB7ccC14EB156CAC45Ed855B9a4c19C99CdE5BfBb",
      "txHash": "0x082cb533da66f51bd9a350592ea92e3709c50b519d93286d2c2ad50b84675f27",
      "kind": "transparent"
    }
  ],
  "impls": {
    "fea932413ee15412bb68b7e472273f5f87ba781dd5c1e3c6e1bb4d7b0b8855cc": {
      "address": "0x5095E095333E39963473E92cD30bCc585f5B2c81",
      "txHash": "0xbfb4f841f32261e0669faad72bac1e432d9c7b12859386804f6bff8a16ebb03c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:310"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)579_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "Coin",
            "type": "t_contract(IERC20)2467",
            "src": "ERC20Wrapper.sol:21"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "factoryContract",
            "type": "t_address",
            "src": "ERC20Wrapper.sol:22"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "totalLiquidity",
            "type": "t_uint256",
            "src": "ERC20Wrapper.sol:23"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "usedLiquidity",
            "type": "t_uint256",
            "src": "ERC20Wrapper.sol:24"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "balanceSupplyCallPending",
            "type": "t_array(t_address)dyn_storage",
            "src": "ERC20Wrapper.sol:25"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "liquidityMapping",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "ERC20Wrapper.sol:26"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "borrowersMapping",
            "type": "t_mapping(t_address,t_struct(BorrowerDetails)27_storage)",
            "src": "ERC20Wrapper.sol:27"
          }
        ],
        "types": {
          "t_contract(IERC20)2467": {
            "label": "contract IERC20"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_struct(BorrowerDetails)27_storage)": {
            "label": "mapping(address => struct ERC20Wrapper.BorrowerDetails)"
          },
          "t_struct(BorrowerDetails)27_storage": {
            "label": "struct ERC20Wrapper.BorrowerDetails",
            "members": [
              {
                "label": "time",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)579_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)579_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "e0fbab3399ed0c7b2beac5f8e0847e39fe279dbcedfab073b43c96edbdcd5e13": {
      "address": "0x9E337d55B250E3c5809f1d4BDd4f78c8511f1891",
      "txHash": "0xe22a4b06731abf42f67c13cfc4243497983ffb597f77924e0e657664a40eb2a7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:310"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)581_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "Coin",
            "type": "t_contract(IERC20)2469",
            "src": "ERC20Wrapper.sol:21"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "factoryContract",
            "type": "t_address",
            "src": "ERC20Wrapper.sol:22"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "totalLiquidity",
            "type": "t_uint256",
            "src": "ERC20Wrapper.sol:23"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "usedLiquidity",
            "type": "t_uint256",
            "src": "ERC20Wrapper.sol:24"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "balanceSupplyCallPending",
            "type": "t_array(t_address)dyn_storage",
            "src": "ERC20Wrapper.sol:25"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "liquidityMapping",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "ERC20Wrapper.sol:26"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "borrowersMapping",
            "type": "t_mapping(t_address,t_struct(BorrowerDetails)27_storage)",
            "src": "ERC20Wrapper.sol:27"
          }
        ],
        "types": {
          "t_contract(IERC20)2469": {
            "label": "contract IERC20"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_struct(BorrowerDetails)27_storage)": {
            "label": "mapping(address => struct ERC20Wrapper.BorrowerDetails)"
          },
          "t_struct(BorrowerDetails)27_storage": {
            "label": "struct ERC20Wrapper.BorrowerDetails",
            "members": [
              {
                "label": "time",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)581_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)581_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "dc491667d241a500745b12b1f6d6ae36a2f355d0c15134cda8e95df1f0877597": {
      "address": "0x54e83Bc7AcEeC21aB4243d6eA9d7f564851B8780",
      "txHash": "0x0321c38dce12b5602d829032d2db860072f4c32e5c435509436efd6b69a136f7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:310"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)590_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "Coin",
            "type": "t_contract(IERC20)2478",
            "src": "ERC20Wrapper.sol:21"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "factoryContract",
            "type": "t_address",
            "src": "ERC20Wrapper.sol:22"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "totalLiquidity",
            "type": "t_uint256",
            "src": "ERC20Wrapper.sol:23"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "usedLiquidity",
            "type": "t_uint256",
            "src": "ERC20Wrapper.sol:24"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "balanceSupplyCallPending",
            "type": "t_array(t_address)dyn_storage",
            "src": "ERC20Wrapper.sol:25"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "liquidityMapping",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "ERC20Wrapper.sol:26"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "borrowersMapping",
            "type": "t_mapping(t_address,t_struct(BorrowerDetails)27_storage)",
            "src": "ERC20Wrapper.sol:27"
          }
        ],
        "types": {
          "t_contract(IERC20)2478": {
            "label": "contract IERC20"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_struct(BorrowerDetails)27_storage)": {
            "label": "mapping(address => struct ERC20Wrapper.BorrowerDetails)"
          },
          "t_struct(BorrowerDetails)27_storage": {
            "label": "struct ERC20Wrapper.BorrowerDetails",
            "members": [
              {
                "label": "time",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)590_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)590_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "2924b1f96eae2e25b38b4cf750efbf80773ed8c561fd0966a65f5f281bdfbb58": {
      "address": "0xC1286b5174544Ee6648883A037537C8F1fe83EC9",
      "txHash": "0xfde8e8fe62a9926c0faecf85624f60a9a66cd3a66b49bf6e085c6b8bc00cd542",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:310"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)590_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "Coin",
            "type": "t_contract(IERC20)2478",
            "src": "ERC20Wrapper.sol:21"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "factoryContract",
            "type": "t_address",
            "src": "ERC20Wrapper.sol:22"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "totalLiquidity",
            "type": "t_uint256",
            "src": "ERC20Wrapper.sol:23"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "usedLiquidity",
            "type": "t_uint256",
            "src": "ERC20Wrapper.sol:24"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "balanceSupplyCallPending",
            "type": "t_array(t_address)dyn_storage",
            "src": "ERC20Wrapper.sol:25"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "liquidityMapping",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "ERC20Wrapper.sol:26"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "borrowersMapping",
            "type": "t_mapping(t_address,t_struct(BorrowerDetails)27_storage)",
            "src": "ERC20Wrapper.sol:27"
          }
        ],
        "types": {
          "t_contract(IERC20)2478": {
            "label": "contract IERC20"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_struct(BorrowerDetails)27_storage)": {
            "label": "mapping(address => struct ERC20Wrapper.BorrowerDetails)"
          },
          "t_struct(BorrowerDetails)27_storage": {
            "label": "struct ERC20Wrapper.BorrowerDetails",
            "members": [
              {
                "label": "time",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)590_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)590_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "8e5d2e42a4245b5f37859a869f59fa5ad1d68a12645511ec545bcdcd0a613f07": {
      "address": "0xCEFB68De0c0361Ca1A2b409d20c5D9c30E07FD7d",
      "txHash": "0x1d8852721e8dd6571fc8e98c9522f2c5fa9cd43482372da0f84f5daf5052004d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:310"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)600_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "Coin",
            "type": "t_contract(IERC20)2488",
            "src": "ERC20Wrapper.sol:21"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "factoryContract",
            "type": "t_address",
            "src": "ERC20Wrapper.sol:22"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "totalLiquidity",
            "type": "t_uint256",
            "src": "ERC20Wrapper.sol:23"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "usedLiquidity",
            "type": "t_uint256",
            "src": "ERC20Wrapper.sol:24"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "balanceSupplyCallPending",
            "type": "t_array(t_address)dyn_storage",
            "src": "ERC20Wrapper.sol:25"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "liquidityMapping",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "ERC20Wrapper.sol:26"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "borrowersMapping",
            "type": "t_mapping(t_address,t_struct(BorrowerDetails)27_storage)",
            "src": "ERC20Wrapper.sol:27"
          }
        ],
        "types": {
          "t_contract(IERC20)2488": {
            "label": "contract IERC20"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_struct(BorrowerDetails)27_storage)": {
            "label": "mapping(address => struct ERC20Wrapper.BorrowerDetails)"
          },
          "t_struct(BorrowerDetails)27_storage": {
            "label": "struct ERC20Wrapper.BorrowerDetails",
            "members": [
              {
                "label": "time",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)600_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)600_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "dd9da3544ceaccf84ae7978d24dd7ee2b739c6d9ef64dc4dac32f56b8a6337f5": {
      "address": "0xbCDff7dB7dbD11677E2c75AEAe1F67C9917BD850",
      "txHash": "0x4b0c80704674c89e1b9573c081a80bc5a20cc9e2d1fa02996dd50450e8c0bc5e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:310"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)607_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "Coin",
            "type": "t_contract(IERC20)2495",
            "src": "ERC20Wrapper.sol:21"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "factoryContract",
            "type": "t_address",
            "src": "ERC20Wrapper.sol:22"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "totalLiquidity",
            "type": "t_uint256",
            "src": "ERC20Wrapper.sol:23"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "usedLiquidity",
            "type": "t_uint256",
            "src": "ERC20Wrapper.sol:24"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "balanceSupplyCallPending",
            "type": "t_array(t_address)dyn_storage",
            "src": "ERC20Wrapper.sol:25"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "liquidityMapping",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "ERC20Wrapper.sol:26"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "borrowersMapping",
            "type": "t_mapping(t_address,t_struct(BorrowerDetails)27_storage)",
            "src": "ERC20Wrapper.sol:27"
          }
        ],
        "types": {
          "t_contract(IERC20)2495": {
            "label": "contract IERC20"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_struct(BorrowerDetails)27_storage)": {
            "label": "mapping(address => struct ERC20Wrapper.BorrowerDetails)"
          },
          "t_struct(BorrowerDetails)27_storage": {
            "label": "struct ERC20Wrapper.BorrowerDetails",
            "members": [
              {
                "label": "time",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)607_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)607_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    }
  }
}
