{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x3bF95a6Fb88Bfe649A418cb1901E0b5EFE600037",
    "txHash": "0x0fa65acb22a448036bfc1177adda537681f75125ae4597fd8bb2678e688c1dbe"
  },
  "proxies": [
    {
      "address": "0xf3C1BBaf234eb8E8a1E4C2b3BF11152DCFDd07aD",
      "txHash": "0x4aa0049017aa40b1be1953c4b92475a37a8338a271116ba6083865a918bdcf27",
      "kind": "transparent"
    },
    {
      "address": "0x5cac25aeB1527EbEC286818dfba94965c447F9BF",
      "txHash": "0x229faa771eba671ecd6e948a1abcf20593aba76e0e80a4857fef44307ce200a8",
      "kind": "transparent"
    }
  ],
  "impls": {
    "e821bc9a0a0647d4e2a39ef4cb8dddd488f0a91a756048dee1ecd6198b466e57": {
      "address": "0xd9003d99C5e1dA26eD4B157b5B489c0635B71Be2",
      "txHash": "0x84b9c0f533bd62ef9499b809a948e4f5f8582024058700f9183f66f16259c922",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:310"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)2832_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:229"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "UNERC20",
            "label": "Coin",
            "type": "t_contract(IERC20Upgradeable)4453",
            "src": "unERC20.sol:29"
          },
          {
            "contract": "UNERC20",
            "label": "tokenAddress",
            "type": "t_address",
            "src": "unERC20.sol:30"
          },
          {
            "contract": "UNERC20",
            "label": "factoryContract",
            "type": "t_address",
            "src": "unERC20.sol:31"
          },
          {
            "contract": "UNERC20",
            "label": "totalLiquidity",
            "type": "t_uint256",
            "src": "unERC20.sol:32"
          },
          {
            "contract": "UNERC20",
            "label": "usedLiquidity",
            "type": "t_uint256",
            "src": "unERC20.sol:33"
          },
          {
            "contract": "UNERC20",
            "label": "balanceSupplyCallPending",
            "type": "t_array(t_address)dyn_storage",
            "src": "unERC20.sol:34"
          },
          {
            "contract": "UNERC20",
            "label": "liquidityMapping",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "unERC20.sol:35"
          },
          {
            "contract": "UNERC20",
            "label": "borrowersMapping",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "unERC20.sol:36"
          },
          {
            "contract": "UNERC20",
            "label": "contractInteractions",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "unERC20.sol:37"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)4453": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)2832_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)2832_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    }
  }
}
